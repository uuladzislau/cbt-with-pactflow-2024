openapi: 3.0.3
info:
  title: Products API
  description: Products API
  version: 1.0.0

paths:
  /api/v1/products:
    get:
      summary: Get product information
      description: Returns a list of products with basic information
      responses:
        '200':
          $ref: '#/components/responses/200_OK_Product_Summaries'
  /api/v1/products/{id}:
    get:
      summary: Get product information by Id
      description: Returns a product with a given Id
      parameters:
        - $ref: "#/components/parameters/ProductId"
      responses:
        '200':
          $ref: '#/components/responses/200_OK_Product'
        '404':
          $ref: '#/components/responses/404_Not_Found'

components:
  parameters:
    ProductId:
      name: id
      in: path
      description: Product Id
      required: true
      schema:
        type: integer
  responses:
    200_OK_Product_Summaries:
      description: A list of products
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProductSummary'
    200_OK_Product:
      description: A product with given Id found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    404_Not_Found:
      description: A product with given Id found

  schemas:
    ProductSummary:
      type: object
      required:
          - id
          - name
          - price
      properties:
        id:
          $ref: '#/components/schemas/ProductId'
        name:
          $ref: '#/components/schemas/ProductName'
        price:
          $ref: '#/components/schemas/ProductPrice'
    Product:
      type: object
      required:
        - id
        - name
        - price
        - category
        - stores
      properties:
        id:
          $ref: '#/components/schemas/ProductId'
        name:
          $ref: '#/components/schemas/ProductName'
        price:
          $ref: '#/components/schemas/ProductPrice'
        category:
          $ref: '#/components/schemas/ProductCategory'
        stores:
          $ref: '#/components/schemas/Stores'
    ProductId:
      type: integer
      description: Unique identifier for the product
      example: 1
    ProductName:
      type: string
      description: Name of the product
      example: MacBook Pro 2022
    ProductPrice:
      type: number
      format: double
      description: Price of the product
      example: 200.00
    ProductCategory:
      type: string
      description: Category of the product
      enum:
        - PHONES
        - COMPUTERS
        - ACCESSORIES
      example: COMPUTERS
    Stores:
      type: array
      description: List of stores where the product is available
      items:
        type: string